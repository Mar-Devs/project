#include<iostream>
#include<string>
#include<unordered_map>
#include<fstream>
#include<sstream>
#include<regex>
using namespace std;


class hash_map {
private:
	unordered_map<string, int> sacred_archive;

public:
	void unordered_map_insert(const string& websites) {
		sacred_archive[websites]++;

	};

	void print() {
		vector<pair<string, int>> result(sacred_archive.begin(), sacred_archive.end());
		sort(result.begin(), result.end(), [](const pair<string, int>& files, const pair<string, int>& visits) {
			return files.second > visits.second;
			});

			for (int i = 0; i < 10 && i < result.size(); ++i) {
				cout << "File Name:" << result[i].first << " Visit Count:" << result[i].second << endl;
			}


		
	};



};

int main() {
	ifstream file;
	hash_map map;
	file.open("C:/Users/marah/Downloads/access_log/access_log");
	if (file.is_open()) {
		string line;
		regex pattern(R"("GET\s(.*?)\sHTTP.*"\s(\d+))");
		while (getline(file, line)) {
			smatch data;
			if (regex_search(line, data, pattern)) {
				string name = data[1];
				int visit = stoi(data[2].str());
				map.unordered_map_insert(name);
			}
		}

		map.print();
		file.close();
	}

	else {
		cout << "Error opening file. Please check your path." << endl;
	}
}
